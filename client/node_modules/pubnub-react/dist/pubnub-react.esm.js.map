{"version":3,"file":"pubnub-react.esm.js","sources":["../src/context/PubNubContext.tsx","../src/context/PubNubProvider.tsx","../src/context/PubNubConsumer.tsx","../src/hooks/usePubNub.ts"],"sourcesContent":["import React from 'react';\nimport PubNub from 'pubnub';\n\nexport interface PubNubContextValue {\n  client: PubNub;\n}\n\nexport const PubNubContext = React.createContext<PubNubContextValue | null>(\n  null\n);\n","import React from 'react';\nimport PubNub from 'pubnub';\nimport invariant from 'ts-invariant';\n\nimport { PubNubContext } from './PubNubContext';\n\nexport interface PubNubProviderProps<PubNubInstance> {\n  client: PubNubInstance;\n  children: React.ReactNode | React.ReactNode[] | null;\n}\n\nfunction appendPnsdk(pubnub: any) {\n  if (typeof pubnub._addPnsdkSuffix === 'function') {\n    pubnub._addPnsdkSuffix('react', 'React/__VERSION__');\n  }\n}\n\nexport const PubNubProvider: React.FC<PubNubProviderProps<PubNub>> = ({\n  client,\n  children,\n}) => {\n  const contextValue = React.useMemo(() => {\n    return { client };\n  }, [client]);\n\n  invariant(\n    contextValue.client,\n    'PubNubProvider was not passed a client instance. Make ' +\n      'sure you pass in your client via the \"client\" prop.'\n  );\n\n  React.useEffect(() => {\n    appendPnsdk(contextValue.client);\n  }, []);\n\n  return (\n    <PubNubContext.Provider value={contextValue}>\n      {children}\n    </PubNubContext.Provider>\n  );\n};\n","import React from 'react';\nimport PubNub from 'pubnub';\nimport invariant from 'ts-invariant';\n\nimport { PubNubContext } from './PubNubContext';\n\nexport interface PubNubConsumerProps {\n  children: (client: PubNub) => React.ReactChild | null;\n}\n\nexport const PubNubConsumer: React.FC<PubNubConsumerProps> = ({ children }) => {\n  const context = React.useContext(PubNubContext);\n\n  invariant(\n    context && context.client,\n    'Could not find \"client\" in the context of PubNubConsumer. ' +\n      'Wrap the root component in an <PubNubProvider>.'\n  );\n\n  return <>{children(context!.client)}</>;\n};\n","import { useContext } from 'react';\nimport PubNub from 'pubnub';\nimport invariant from 'ts-invariant';\n\nimport { PubNubContext } from '../context/PubNubContext';\n\nexport function usePubNub(): PubNub {\n  const context = useContext(PubNubContext);\n\n  invariant(\n    context && context.client,\n    'No PubNub Client instance can be found. Please ensure that you ' +\n      'have called `PubNubProvider` higher up in your tree.'\n  );\n\n  return context!.client;\n}\n"],"names":["PubNubContext","React","createContext","appendPnsdk","pubnub","_addPnsdkSuffix","PubNubProvider","client","children","contextValue","useMemo","invariant","useEffect","Provider","value","PubNubConsumer","context","useContext","usePubNub"],"mappings":";;;AAOO,IAAMA,aAAa,gBAAGC,KAAK,CAACC,aAAN,CAC3B,IAD2B,CAAtB;;ACIP,SAASC,WAAT,CAAqBC,MAArB;AACE,MAAI,OAAOA,MAAM,CAACC,eAAd,KAAkC,UAAtC,EAAkD;AAChDD,IAAAA,MAAM,CAACC,eAAP,CAAuB,OAAvB,EAAgC,aAAhC;AACD;AACF;;AAED,IAAaC,cAAc,GAA0C,SAAxDA,cAAwD;MACnEC,cAAAA;MACAC,gBAAAA;AAEA,MAAMC,YAAY,GAAGR,KAAK,CAACS,OAAN,CAAc;AACjC,WAAO;AAAEH,MAAAA,MAAM,EAANA;AAAF,KAAP;AACD,GAFoB,EAElB,CAACA,MAAD,CAFkB,CAArB;AAIA,GACEE,YAAY,CAACF,MADf,2CAAAI,SAAS,QAEP,2DACE,qDAHK,CAAT,GAAAA,SAAS,OAAT;AAMAV,EAAAA,KAAK,CAACW,SAAN,CAAgB;AACdT,IAAAA,WAAW,CAACM,YAAY,CAACF,MAAd,CAAX;AACD,GAFD,EAEG,EAFH;AAIA,SACEN,mBAAA,CAACD,aAAa,CAACa,QAAf;AAAwBC,IAAAA,KAAK,EAAEL;GAA/B,EACGD,QADH,CADF;AAKD,CAvBM;;ICPMO,cAAc,GAAkC,SAAhDA,cAAgD;MAAGP,gBAAAA;AAC9D,MAAMQ,OAAO,GAAGf,KAAK,CAACgB,UAAN,CAAiBjB,aAAjB,CAAhB;AAEA,IACEgB,OAAO,IAAIA,OAAO,CAACT,MADrB,4CAAAI,SAAS,QAEP,+DACE,iDAHK,CAAT,GAAAA,SAAS,OAAT;AAMA,SAAOV,mBAAA,eAAA,MAAA,EAAGO,QAAQ,CAACQ,OAAQ,CAACT,MAAV,CAAX,CAAP;AACD,CAVM;;SCJSW;AACd,MAAMF,OAAO,GAAGC,UAAU,CAACjB,aAAD,CAA1B;AAEA,IACEgB,OAAO,IAAIA,OAAO,CAACT,MADrB,4CAAAI,SAAS,QAEP,oEACE,sDAHK,CAAT,GAAAA,SAAS,OAAT;AAMA,SAAOK,OAAQ,CAACT,MAAhB;AACD;;;;"}